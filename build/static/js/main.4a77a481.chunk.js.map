{"version":3,"sources":["components/UI/Input/Input.module.css","containers/Login/Auth/Auth.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","containers/Roster/Member/Member.module.css","components/Logo/Logo.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","containers/Roster/AddMember/AddMember.module.css","containers/Login/ViewHistory/ViewHistory.module.css","containers/Login/Login.module.css","containers/Dashboard/Dashboard.module.css","containers/Roster/Roster.module.css","containers/Login/Auth/PrivateRoute/PrivateRoute.js","components/Logo/Logo.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","containers/Roster/AddMember/AddMember.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/UI/Input/Input.js","components/UI/Button/Button.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login/Auth/Auth.js","containers/Login/ViewHistory/ViewHistory.js","containers/Login/Login.js","containers/Login/Logout/Logout.js","containers/Dashboard/Dashboard.js","containers/Roster/Member/Member.js","containers/Roster/Roster.js","hoc/App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","PrivateRoute","isAuth","auth","Component","component","rest","render","props","to","pathname","state","from","location","logo","className","classes","Logo","src","alt","toolbar","Toolbar","navigationItem","active","document","getElementsByClassName","console","log","length","parentNode","style","backgroundColor","NavigationItem","exact","activeClassName","link","children","navigationItems","NavigationItems","addMember","AddMember","sidedrawer","SideDrawer","AddClinic","connect","isAuthorized","token","Layout","color","padding","gridColumn","Content","input","inputElement","hideClass","registring","Hide","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","join","elementConfig","value","onChange","changed","options","map","option","key","label","Input","Label","button","Button","btnType","onClick","clicked","email","password","isSignup","dispatch","type","authData","user","url","axios","post","then","res","userId","roster","clinics","data","id","roster_members","idToken","expirationTime","setTimeout","catch","err","Auth","controls","validation","required","isEmail","valid","minLength","intern","checkValidity","rules","isValid","trim","maxLength","test","isNumeric","inputChangedHandler","event","controlName","updatedControls","target","checked","setState","submitHandler","e","preventDefault","onAuth","switchAuthModeHandler","prevState","formElementArray","this","config","form","formElement","authRedirect","isAuthenticated","switchAuthModeMessage","SignupBtn","onSubmit","loading","error","actions","Viewhistory","search","placeholder","ViewHistory","Login","Logout","onLogout","Dashboard","Member","class","Id","memberId","name","Roster","Object","keys","member","App","path","Boolean","window","hostname","match","updateObject","oldObject","updatedProperties","initialState","authRedirectPath","authStart","action","authSuccess","authFail","authLogout","setAuthRedirectPath","reducer","rootReducer","combineReducers","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4a77a481.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"Hide\":\"Input_Hide__23AQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2MsY-\",\"slideInFromLeft\":\"Auth_slideInFromLeft__1odrX\",\"fadein\":\"Auth_fadein__1cwaZ\",\"SignupBtn\":\"Auth_SignupBtn__1f7XD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"AddClinic\":\"SideDrawer_AddClinic__DjcIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\",\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\",\"Login\":\"Button_Login__Ebhes\",\"Signup\":\"Button_Signup__3y0Jo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Member\":\"Member_Member__3e4ci\",\"Id\":\"Member_Id__1leHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddMember\":\"AddMember_AddMember__Q7-8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ViewHistory\":\"ViewHistory_ViewHistory__r6K__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__IEkli\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__2Nl7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Roster\":\"Roster_Roster__2-Lyk\"};","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ auth: isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuth ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\n\n// import soupLogo from '../../assets/images/';\nimport classes from './Logo.module.css';\n\nconst soupLogo =\n  'https://cdn.dribbble.com/users/654369/screenshots/1855571/untitled-4.png';\nconst logo = () => (\n  <div className={classes.Logo}>\n    <img src={soupLogo} alt=\"Soup logo\" />\n  </div>\n);\n\nexport default logo;\n","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport classes from './Toolbar.module.css';\n\nconst toolbar = (props) => (\n  <header className={classes.Toolbar}>\n    <Logo />\n    {props.isAuth ? <span>Welcome, User!</span> : null}\n  </header>\n);\n\nexport default toolbar;\n","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => {\n  const activeStyle = {\n    backgroundColor: '#fff',\n  };\n  const active = document.getElementsByClassName('active');\n  console.log(active);\n  if (active.length > 0) {\n    console.log(active);\n    active[0].parentNode.style = activeStyle;\n  }\n  return (\n    <li className={classes.NavigationItem}>\n      <NavLink\n        exact={props.exact}\n        activeClassName={classes.active}\n        to={props.link}\n      >\n        {props.children}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default navigationItem;\n","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/roster\">My Roster</NavigationItem>\n    <NavigationItem link=\"/members\">All members</NavigationItem>\n    <NavigationItem link=\"/logout\">Logout</NavigationItem>\n  </ul>\n);\n\nexport default navigationItems;\n","import React from 'react';\nimport classes from './AddMember.module.css';\n\nconst addMember = (props) => (\n  <div className={classes.AddMember}>\n    <span></span>\n    <p>Add New Member</p>\n  </div>\n);\n\nexport default addMember;\n","import React from 'react';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport AddMember from '../../../containers/Roster/AddMember/AddMember';\nconst sidedrawer = (props) => (\n  <div className={classes.SideDrawer}>\n    <div className={classes.AddClinic}>\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n    <div>\n      <AddMember />\n      <nav>\n        <NavigationItems />\n      </nav>\n    </div>\n  </div>\n);\n\nexport default sidedrawer;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport classes from './Layout.module.css';\nconst layout = (props) => {\n  const style = {\n    gridColumn: '1 / -1',\n  };\n  const styleAuthed = {\n    color: '#fff',\n    padding: '30px',\n  };\n  return (\n    <div className={classes.Layout}>\n      {/* Toolbar, Sidebar, Backdrop */}\n      <Toolbar isAuth={props.isAuthorized} />\n      {props.isAuthorized ? <SideDrawer /> : null}\n      <main\n        style={!props.isAuthorized ? style : styleAuthed}\n        className={classes.Content}\n      >\n        {props.children}\n      </main>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthorized: state.auth.token !== null,\n  };\n};\nexport default connect(mapStateToProps)(layout);\n","import React from 'react';\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n  let inputElement = null;\n  const hideClass = !props.registring ? classes.Hide : null;\n  const inputClasses = [classes.InputElement, hideClass];\n  if (\n    props.invalid &&\n    props.shouldValidate &&\n    props.touched &&\n    props.registring\n  ) {\n    inputClasses.push(classes.Invalid);\n  }\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n\n    case 'textarea':\n      inputElement = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case 'select':\n      inputElement = (\n        <select\n          className={inputClasses.join(' ')}\n          onChange={props.changed}\n          value={props.value}\n        >\n          {props.elementConfig.options.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n  }\n  return (\n    <div className={classes.Input}>\n      {inputElement}\n      <label className={classes.Label}>{props.label}</label>\n    </div>\n  );\n};\n\nexport default input;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(' ')}\n    onClick={props.clicked}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token, userId, roster, clinics) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId,\n    roster,\n    clinics,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path,\n  };\n};\n\nexport const auth = (email, password, isSignup) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      user: {\n        email: email,\n        password: password,\n      },\n    };\n    let url = 'https://abasoup.herokuapp.com/api/users/login/';\n\n    if (isSignup) {\n      url = 'https://abasoup.herokuapp.com/api/users/';\n    }\n    axios\n      .post(url, authData)\n      .then((res) => {\n        console.log(res);\n        dispatch(\n          authSuccess(\n            res.data.token,\n            res.data.id,\n            res.data.roster_members,\n            res.data.clinics\n          )\n        );\n        const expiresIn = 36000;\n        dispatch(checkAuthTimeout(expiresIn));\n\n        //dispatch(checkAuthTimeout(res.data.expiresIn)); NEED expiresIn from Server Response\n      })\n      .catch((err) => {\n        console.log(err);\n        // dispatch(authFail(err.response.data.error));\n      });\n  };\n};\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../../components/UI/Input/Input';\nimport Button from '../../../components/UI/Button/Button';\n\nimport classes from './Auth.module.css';\nimport * as actions from '../../../store/actions/index';\nclass Auth extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n        touched: false,\n        label: 'Email',\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n        label: 'Password',\n      },\n      intern: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'checkbox',\n        },\n        value: '',\n        validation: {},\n        valid: true,\n        touched: false,\n        label: \"I'm an intern\",\n      },\n    },\n    isSignup: false,\n  };\n  checkValidity = (value, rules) => {\n    if (!rules) return true;\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.minLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  };\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        valid: this.checkValidity(\n          event.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true,\n        checked: event.target.checked,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.isSignup\n    );\n  };\n  switchAuthModeHandler = () => {\n    this.setState((prevState) => {\n      return { isSignup: !prevState.isSignup };\n    });\n  };\n  render() {\n    const formElementArray = [];\n    for (let key in this.state.controls) {\n      formElementArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n\n    let form = formElementArray.map((formElement) => (\n      <Input\n        key={formElement.id}\n        elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        changed={(e) => this.inputChangedHandler(e, formElement.id)}\n        shouldValidate={formElement.config.validation}\n        invalid={!formElement.config.valid}\n        touched={formElement.config.touched}\n        label={formElement.config.label}\n        registring={this.state.isSignup}\n      />\n    ));\n    let authRedirect = null;\n    if (this.props.isAuthenticated) {\n      authRedirect = <Redirect to=\"/\" />;\n    }\n    let switchAuthModeMessage = (\n      <p>\n        Not a member?\n        <span\n          onClick={this.switchAuthModeHandler}\n          className={classes.SignupBtn}\n        >\n          Join Soup\n        </span>\n      </p>\n    );\n    if (this.state.isSignup) {\n      switchAuthModeMessage = (\n        <p>\n          Already a member?\n          <span\n            onClick={this.switchAuthModeHandler}\n            className={classes.SignupBtn}\n          >\n            Log in\n          </span>\n        </p>\n      );\n    }\n    console.log(this.state.isSignup);\n    return (\n      <div className={classes.Auth}>\n        {authRedirect}\n        {/* {errorMessage} */}\n        <form onSubmit={this.submitHandler}>\n          <h2>{this.state.isSignup ? 'Join Soup' : 'Login to Soup'}</h2>\n          {form}\n          <Button btnType=\"Login\">\n            {this.state.isSignup ? 'Signup' : 'Login'}\n          </Button>\n          {switchAuthModeMessage}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, password, isSignup) =>\n      dispatch(actions.auth(email, password, isSignup)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from 'react';\nimport Input from '../../../components/UI/Input/Input';\nimport Button from '../../../components/UI/Button/Button';\n\nimport classes from './ViewHistory.module.css';\n\nclass Viewhistory extends Component {\n  state = {\n    controls: {\n      search: {\n        elementType: 'text',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Id (i.e. 123)',\n        },\n        value: '',\n        validation: {},\n        valid: true,\n      },\n    },\n  };\n  inputChangedHandler = (event) => {\n    const updatedControls = {\n      ...this.state.controls,\n      search: {\n        ...this.state.controls.search,\n        value: event.target.value,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  render() {\n    return (\n      <div className={classes.ViewHistory}>\n        <h2>Check your history</h2>\n        <form>\n          <Input\n            elementType={this.state.controls.search.elementType}\n            elementConfig={this.state.controls.search.elementConfig}\n            value={this.state.controls.search.value}\n            changed={(e) => this.inputChangedHandler(e)}\n            shouldValidate={this.state.controls.search.validation}\n            invalid={!this.state.controls.search.valid}\n          />\n          <Button btnType=\"Search\">Go!</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Viewhistory;\n","import React, { Component } from 'react';\nimport Auth from './Auth/Auth';\nimport ViewHistory from './ViewHistory/ViewHistory';\nimport classes from './Login.module.css';\n\nclass Login extends Component {\n  render() {\n    return (\n      <div className={classes.Login}>\n        <ViewHistory />\n        <Auth />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.onLogout();\n  }\n  render() {\n    return <Redirect to=\"/login\" />;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => dispatch(actions.logout()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { Component } from 'react';\nimport classes from './Dashboard.module.css';\n\nclass Dashboard extends Component {\n  render() {\n    return <div className={classes.Dashboard}>Dashboard</div>;\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './Member.module.css';\n\nconst member = (props) => {\n  return (\n    <section className={classes.Member}>\n      <main>\n        <span class={classes.Id}>{props.memberId}</span>\n        <button>Report</button>\n        <button>Add Soup</button>\n        <h3>{props.name}</h3>\n      </main>\n      <aside>\n        <span>10%</span>\n        <span>50%</span>\n        <span>34%</span>\n      </aside>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    roster: state.auth.roster,\n  };\n};\nexport default connect(mapStateToProps)(member);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Member from './Member/Member';\nimport AddMember from './AddMember/AddMember';\nimport classes from './Roster.module.css';\n\nclass Roster extends Component {\n  render() {\n    console.log(this.props.roster);\n    const roster = Object.keys(this.props.roster).map((member) => {\n      console.log(member);\n      const { name } = this.props.roster[member];\n      return <Member key={member} memberId={member} name={name} />;\n    });\n    return (\n      <div className={classes.Roster}>\n        <h1>My Roster</h1>\n        <AddMember />\n        {roster}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    roster: state.auth.roster,\n  };\n};\n\nexport default connect(mapStateToProps)(Roster);\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport PrivateRoute from '../containers/Login/Auth/PrivateRoute/PrivateRoute';\n\nimport Layout from './Layout/Layout';\nimport Login from '../containers/Login/Login';\nimport Logout from '../containers/Login/Logout/Logout';\nimport Dashboard from '../containers/Dashboard/Dashboard';\nimport Roster from '../containers/Roster/Roster';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            {/* Public routes */}\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            {/* Hitory Route */}\n            {/* Authorization required */}\n            <PrivateRoute\n              auth={this.props.isAuthorized}\n              path=\"/roster\"\n              component={Roster}\n            />\n            <PrivateRoute\n              auth={this.props.isAuthorized}\n              path=\"/members\"\n              component={Roster} //Replace with Members component\n            />\n            <PrivateRoute\n              auth={this.props.isAuthorized}\n              path=\"/\"\n              exact\n              component={Dashboard}\n            />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    isAuthorized: state.auth.token !== null,\n  };\n};\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/',\n  roster: null,\n  clinics: null,\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n    roster: action.roster,\n    clinics: action.clinics,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './reset.css';\nimport './index.css';\nimport App from './hoc/App';\nimport * as serviceWorker from './serviceWorker';\nimport authReducer from './store/reducers/auth';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}